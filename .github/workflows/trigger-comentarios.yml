name: Ejecutar acciones basadas en el número de issue y comentario

on:
  issue_comment:
    types: [created]

jobs:
  acciones_condicionales:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
      org: write
    steps:
      - name: Checkout del código
        uses: actions/checkout@v2

      - name: Instalar Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Instalar Jest Globalmente (opcional)
        if: contains(github.event.comment.body, '#listo') && github.event.issue.number == 44
        run: npm install -g jest

      - name: Ejecutar pruebas unitarias
        if: contains(github.event.comment.body, '#listo') && github.event.issue.number == 44
        run: |
          cd backend/lambda-listar-clientes
          npm install
          npm test

      - name: Mover issue a la columna deseada después de tests exitosos
        if: success() && contains(github.event.comment.body, '#listo') && github.event.issue.number == 44
        uses: actions/github-script@v5
        with:
          script: |
            console.log("Comprobando PAT:");
            console.log(process.env.MI_PAT); // Log PAT value (masked)

            const projectId = "PVTV_lADOCatWXc4AePLTzgDCvdw"; // ID de tu proyecto V2
            const itemId = "I_kwDOLcr7k86Dzazt"; // ID del item a actualizar
            const fieldId = "PVTSSF_lADOCatWXc4AePLTzgDCvdw"; // ID del campo a actualizar
            const fieldValue = "98236657"; // ID de la opción de selección única

            const mutation = `mutation($input: UpdateProjectV2ItemFieldValueInput!) {
              updateProjectV2ItemFieldValue(input: $input) {
                clientMutationId
              }
            }`;

            const result = await github.graphql(mutation, {
              input: {
                projectId: projectId,
                itemId: itemId,
                fieldId: fieldId,
                value: { singleSelectOptionId: fieldValue }
              },
              headers: {
                authorization: `token ${process.env.MI_PAT}`,
              },
            });

            console.log("Resultado de la actualización:", result);
        env:
          MI_PAT: ${{ secrets.PAT }}  # Replace 'PAT' with the actual secret name
