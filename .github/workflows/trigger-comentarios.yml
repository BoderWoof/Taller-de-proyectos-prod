name: Ejecutar acciones basadas en el número de issue y comentario

on:
  issue_comment:
    types: [created]

jobs:
  acciones_condicionales:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Instalar Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14' # O la versión que necesites

      # Si es necesario instalar Jest
      - name: Instalar Jest Globalmente (opcional)
        if: contains(github.event.comment.body, '#listo') && github.event.issue.number == 44
        run: npm install -g jest

      # Ejecutar pruebas unitarias si el issue es el #44 y contiene #listo en el comentario
      - name: Ejecutar pruebas unitarias
        if: contains(github.event.comment.body, '#listo') && github.event.issue.number == 44
        run: |
          cd backend/lambda-listar-clientes
          npm install
          npm test
      
      # Mover la issue a la columna con ID 98236657 si los tests son exitosos
      - name: Mover issue a la columna deseada después de tests exitosos
        if: success() && contains(github.event.comment.body, '#listo') && github.event.issue.number == 44
        uses: actions/github-script@v5
        with:
          script: |
            const column_id = 98236657; // El ID de la columna a la que se moverá la issue
            const issue_number = context.issue.number; // El número de la issue actual
            const repository = context.repo.repo; // El repositorio donde se está ejecutando el workflow
            const owner = context.repo.owner; // El propietario del repositorio
            
            // Obtener la lista de tarjetas de proyecto en la columna "Hecho"
            const cards = await github.rest.projects.listCards({
              column_id: column_id
            });
            
            // Encontrar la tarjeta que corresponde a la issue
            const card = cards.data.find(card => card.content_url.includes(`/issues/${issue_number}`));
            
            if (card) {
              // Si la tarjeta ya existe en la columna, nada que hacer
              console.log(`La issue #${issue_number} ya está en la columna deseada.`);
            } else {
              // Si no, obtener el ID de la issue
              const issue = await github.rest.issues.get({
                owner: owner,
                repo: repository,
                issue_number: issue_number,
              });
              
              // Crear una nueva tarjeta en la columna
              await github.rest.projects.createCard({
                column_id: column_id,
                content_id: issue.data.id,
                content_type: 'Issue',
              });
              console.log(`La issue #${issue_number} ha sido movida a la columna deseada.`);
            }
